plugins {
    id 'java'
}

group = 'hub.thespace'

def mcVersion = findProperty('mcversion') ?: '1.18.2'

version = mcVersion + '_0.1.3.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "destroystokyo-repo"
        url = "https://repo.destroystokyo.com/repository/maven-public/"
    }
}

dependencies {
    if (mcVersion.startsWith('1.12')) {
        compileOnly 'com.destroystokyo.paper:paper-api:1.12.2-R0.1-SNAPSHOT'
    } else if (mcVersion.startsWith('1.16')) {
        compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    } else if (mcVersion.startsWith('1.18')) {
        compileOnly 'io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT'
    }
}

static def getJavaVersion(version) {
    if (version.startsWith('1.12')) {
        return 11
    } else if (version.startsWith('1.18')) {
        return 17
    }
}

def targetJavaVersion = getJavaVersion(mcVersion)

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
